JWT Tokens-
_________________

compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA.



What is the JSON Web Token structure?
In its compact form, JSON Web Tokens consist of three parts separated by dots (.), which are:
* Header
* Payload
* Signature




Therefore, a JWT typically looks like the following.
xxxxx.yyyyy.zzzzz




Let's break down the different parts.



Header
The header typically consists of two parts: the type of the token, which is JWT, and the signing algorithm being used, such as HMAC SHA256 or RSA.
For example:
{
  "alg": "HS256",
  "typ": "JWT"
}
Then, this JSON is Base64Url encoded to form the first part of the JWT.



Payload
The second part of the token is the payload, which contains the claims. Claims are statements about an entity (typically, the user) and additional data. There are three types of claims: registered, public, and private claims.



{
  "sub": "1234567890",
  "name": "John Doe",
  "admin": true
}



_________

Signature
To create the signature part you have to take the encoded header, the encoded payload, a secret, the algorithm specified in the header, and sign that.
For example if you want to use the HMAC SHA256 algorithm, the signature will be created in the following way:
HMACSHA256(
  base64UrlEncode(header) + "." +
  base64UrlEncode(payload),
  secret)
The signature is used to verify the message wasn't changed along the way, and, in the case of tokens signed with a private key, it can also verify that the sender of the JWT is who it says it is.


___________________________________


Private key public key


It uses private key to sign a JWT and then a public key to verify the jet

_______


JWT (JSON Web Token) signing is the process of creating a digital signature for a token to ensure its authenticity and integrity. This signature allows the recipient to verify that the token was issued by a trusted source and that its contents have not been tampered with.


The signature is created by:Descope+1Wikipedia+1
* Encoding the header and payload using Base64Url.
* Concatenating them with a period (.).
* Applying a cryptographic algorithm (e.g., HMAC, RSA, or ECDSA) using a secret key or private key to generate the signature.Descope+3Wikipedia+3Wikipedia+3




🔍 Why Is JWT Signing Important?
JWT signing provides:
* Authentication: Verifies the token's issuer.
* Integrity: Ensures the token hasn't been altered.
* Trust: Allows recipients to trust the token's content without additional verification








